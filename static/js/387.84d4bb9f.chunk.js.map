{"version":3,"file":"static/js/387.84d4bb9f.chunk.js","mappings":"gQAEaA,E,OAASC,EAAAA,IAAH,gD,SCwCnB,EArCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAH,EAAAA,EAAAA,WAAS,WAAM,wCACb,kHAE8BK,EAAAA,EAAAA,IAAaF,GAF3C,gBAEYG,EAFZ,EAEYA,QAEFC,EAAkBD,EAAQE,KAAI,YAClC,MAAO,CAAEC,GADsD,EAA1BA,GACxBC,OADkD,EAAtBA,OACpBC,QAD0C,EAAdA,QAElD,IAEDT,EAAWK,GARf,gDAUIK,QAAQC,IAAI,KAAIC,SAVpB,0DADa,uBAAC,WAAD,wBAcbC,EACD,GAAE,CAACZ,KAGF,8BACsB,IAAnBF,EAAQe,QACP,uBAAG,8CAEHf,EAAQO,KAAI,SAAAS,GAAE,OACZ,UAACnB,EAAD,YACE,0BAAI,WAASmB,EAAGP,OAAO,QACvB,uBAAIO,EAAGN,YAFIM,EAAGR,GADJ,KASrB,C,oLCxCKS,EAAQ,8BAERC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBT,MAAM,GAAD,OACnBG,EADmB,uCAEtBC,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEgBb,MAAM,GAAD,OACnBG,EADmB,gCACaU,EADb,8CAEtBT,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gGAEgBM,MAAM,GAAD,OACnBG,EADmB,mBACAT,EADA,mBAEtBU,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBrB,GAAzB,gGAEgBM,MAAM,GAAD,OACnBG,EADmB,mBACAT,EADA,2BAEtBU,GAJC,cAEGM,EAFH,gBAMUA,EAAKC,OANf,wEAQHd,QAAQC,IAAI,KAAMC,SARf,gFAYA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA4BI,GAA5B,gGAEgBM,MAAM,GAAD,OAAIG,EAAJ,mBAAuBT,EAAvB,kCACxBU,GAHG,cAEGM,EAFH,gBAIUA,EAAKC,OAJf,wEAOHd,QAAQC,IAAI,KAAMC,SAPf,gF,sBC9DP,SAASiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Review = styled.div`\n    padding: 5px 20px;\n`","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/fetch';\nimport { Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useState(() => {\n    async function fetch() {\n      try {\n        const { results } = await fetchReviews(movieId);\n\n        const filteredResults = results.map(({ id, author, content }) => {\n          return { id, author, content };\n        });\n\n        setReviews(filteredResults);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don't have any rewiews for this movie.</p>\n      ) : (\n        reviews.map(el => (\n          <Review key={el.id}>\n            <h4>Author: {el.author} </h4>\n            <p>{el.content}</p>\n          </Review>\n        ))\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = `https://api.themoviedb.org/`;\n// const KEY = '499c9b17ec4dc1194fa3fa31966ff450';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTljOWIxN2VjNGRjMTE5NGZhM2ZhMzE5NjZmZjQ1MCIsInN1YiI6IjY0NmNkZDJjNzA2YjlmMDBmZTU0MmYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._EPljdPLGA2vemLx2WJWdxYEBVsaBhAo9KW81IlKbcM',\n  },\n};\n\nexport async function fetchTrendMovies() {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByTitle(name) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id){\n  try{\n    const data = await fetch(`${BASE_URL}3/movie/${id}/reviews?language=en-US&page=1`,\n    options)\n    return await data.json();\n\n  }catch(error){\n    console.log(error.message)\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Review","styled","useState","reviews","setReviews","movieId","useParams","fetchReviews","results","filteredResults","map","id","author","content","console","log","message","fetch","length","el","BASE_URL","options","method","headers","accept","Authorization","fetchTrendMovies","data","json","fetchMovieByTitle","name","fetchMovieDetails","fetchCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}