{"version":3,"file":"static/js/247.6acad69e.chunk.js","mappings":"yNAsDA,UAlDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,kHAE2BC,EAAAA,EAAAA,GAAUH,GAFrC,gBAEYF,EAFZ,EAEYA,KAEFM,EAAkBN,EAAKO,KAC3B,YACE,MAAO,CAAEC,KADgC,EAAxCA,KACcC,UAD0B,EAAlCA,UACmBC,aADe,EAAvBA,aACsBC,GADC,EAATA,GAEjC,IAGHV,EAAQK,GAVZ,gDAYIM,QAAQC,IAAI,KAAIC,SAZpB,0DADc,uBAAC,WAAD,wBAgBdC,EACD,GAAE,CAACb,IAKJ,OACE,+BACE,+BACGF,QADH,IACGA,OADH,EACGA,EAAMO,KAAI,SAAAS,GAAE,OACX,yBACE,4BACE,gBACEC,IACED,EAAGN,aAAH,0CACuCM,EAAGN,cAXxD,mKAcYQ,IAAKF,EAAGR,QAEV,mCAAWQ,EAAGR,SACd,uCAAeQ,EAAGP,iBAXbO,EAAGL,GADD,OAmBpB,C,qLCpDKQ,EAAQ,8BAERC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBV,MAAM,GAAD,OACnBI,EADmB,uCAEtBC,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gGAEgBO,MAAM,GAAD,OACnBI,EADmB,gCACaX,EADb,8CAEtBY,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiClB,GAAjC,gGAEgBI,MAAM,GAAD,OACnBI,EADmB,mBACAR,EADA,mBAEtBS,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAAyBM,GAAzB,gGAEgBI,MAAM,GAAD,OACnBI,EADmB,mBACAR,EADA,2BAEtBS,GAJC,cAEGM,EAFH,gBAMUA,EAAKC,OANf,wEAQHf,QAAQC,IAAI,KAAMC,SARf,gFAYA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnB,GAA5B,gGAEgBI,MAAM,GAAD,OAAII,EAAJ,mBAAuBR,EAAvB,kCACxBS,GAHG,cAEGM,EAFH,gBAIUA,EAAKC,OAJf,wEAOHf,QAAQC,IAAI,KAAMC,SAPf,gF,sBC9DP,SAASiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","components/services/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'components/services/fetch';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const { cast } = await fetchCast(movieId);\n\n        const filteredResults = cast.map(\n          ({ name, character, profile_path, id }) => {\n            return { name, character, profile_path, id };\n          }\n        );\n\n        setCast(filteredResults);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://cdn-icons-png.flaticon.com/512/847/847969.png?w=740&t=st=1685547292~exp=1685547892~hmac=2825f00d1a2c61ae503ac799344847357b8a6baa8b9db6ee1132a6431b92254c';\n\n  return (\n    <>\n      <ul>\n        {cast?.map(el => (\n          <li key={el.id}>\n            <div>\n              <img\n                src={\n                  el.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${el.profile_path}`\n                    : defaultImg\n                }\n                alt={el.name}\n              ></img>\n              <p>Actor: {el.name}</p>\n              <p>Character: {el.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = `https://api.themoviedb.org/`;\n// const KEY = '499c9b17ec4dc1194fa3fa31966ff450';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTljOWIxN2VjNGRjMTE5NGZhM2ZhMzE5NjZmZjQ1MCIsInN1YiI6IjY0NmNkZDJjNzA2YjlmMDBmZTU0MmYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._EPljdPLGA2vemLx2WJWdxYEBVsaBhAo9KW81IlKbcM',\n  },\n};\n\nexport async function fetchTrendMovies() {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByTitle(name) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id){\n  try{\n    const data = await fetch(`${BASE_URL}3/movie/${id}/reviews?language=en-US&page=1`,\n    options)\n    return await data.json();\n\n  }catch(error){\n    console.log(error.message)\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchCast","filteredResults","map","name","character","profile_path","id","console","log","message","fetch","el","src","alt","BASE_URL","options","method","headers","accept","Authorization","fetchTrendMovies","data","json","fetchMovieByTitle","fetchMovieDetails","fetchReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}