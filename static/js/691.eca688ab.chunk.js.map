{"version":3,"file":"static/js/691.eca688ab.chunk.js","mappings":"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","sources":["components/services/fetch.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","components/Loader/Loader.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["const BASE_URL = `https://api.themoviedb.org/`;\n// const KEY = '499c9b17ec4dc1194fa3fa31966ff450';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTljOWIxN2VjNGRjMTE5NGZhM2ZhMzE5NjZmZjQ1MCIsInN1YiI6IjY0NmNkZDJjNzA2YjlmMDBmZTU0MmYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._EPljdPLGA2vemLx2WJWdxYEBVsaBhAo9KW81IlKbcM',\n  },\n};\n\nexport async function fetchTrendMovies() {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByTitle(name) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id){\n  try{\n    const data = await fetch(`${BASE_URL}3/movie/${id}/reviews?language=en-US&page=1`,\n    options)\n    return await data.json();\n\n  }catch(error){\n    console.log(error.message)\n  }\n}\n","import styled from '@emotion/styled'\n\nexport const Poster = styled.img`\n    width: 250px;\n\n`\nexport const MovieInfo = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 20px;\n    padding: 20px;\n    border-bottom: 2px solid rgb(148, 147, 147);\n`\n\nexport const AddInfo = styled.ul`\nlist-style: none;\n    padding: 0 20px 20px 20px;\n    border-bottom: 2px solid rgb(148, 147, 147);\n\n`","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Poster, MovieInfo, AddInfo } from './MovieDetails.styled';\n\nconst MovieDetails = ({ details }) => {\n  const { title, overview, genres, poster_path, vote_average, release_date } =\n    details;\n  const posterImg = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const defaultImg =\n    'https://cdn-icons-png.flaticon.com/512/758/758732.png?w=740&t=st=1685548023~exp=1685548623~hmac=5a38f26a8fb5051fdd8b73bf82dd2cf5ba04af6209eae24587bc748010483bce';\n  const year = `${release_date}`.slice(0, 4);\n  const score = Math.round(Number(vote_average) * 10);\n  return (\n    <><MovieInfo>\n     \n      <Poster  src={poster_path ? posterImg : defaultImg} alt={title} />\n      <div>\n        <h3>\n          {title} ({year})\n        </h3>\n        <p>User score: {score}%</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h5>Genres:</h5>\n        <p>\n          {genres?.map(el => (\n            <span key={el.id}> {el.name}</span>\n          ))}\n        </p>\n      </div>\n      </MovieInfo>\n      <AddInfo>\n      <h4>Additional information</h4>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </AddInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    \n    </>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\nimport { Watch } from 'react-loader-spinner';\n\nconst Loader = () => {\nreturn <Watch\n  height=\"80\"\n  width=\"80\"\n  radius=\"48\"\n  color=\"#0d2de4\"\n  ariaLabel=\"watch-loading\"\n  wrapperStyle={{}}\n  wrapperClassName=\"\"\n  visible={true}\n/>\n}\nexport default Loader; ","import { useLocation, useParams, Link } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'components/services/fetch';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState('');\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  \n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        setLoading(true);\n        const results = await fetchMovieDetails(Number(movieId));\n        const {\n          title,\n          overview,\n          genres,\n          poster_path,\n          vote_average,\n          release_date,\n        } = results;\n        const filteredResults = {\n          title,\n          overview,\n          genres,\n          poster_path,\n          vote_average,\n          release_date,\n        };\n\n        setDetails(filteredResults);\n      } catch (err) {\n        console.log(err);\n      } finally{\n        setLoading(false);\n      }\n    }\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>&#8678;Go back</Link>\n      {loading && <Loader />}\n      <MovieDetails details={details} />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","fetchTrendMovies","fetch","data","json","console","log","message","fetchMovieByTitle","name","fetchMovieDetails","id","fetchCast","fetchReviews","Poster","styled","MovieInfo","AddInfo","details","title","overview","genres","poster_path","vote_average","release_date","posterImg","year","slice","score","Math","round","Number","src","alt","map","el","to","Suspense","fallback","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","movieId","useParams","useState","setDetails","loading","setLoading","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","results","current"],"sourceRoot":""}