{"version":3,"file":"static/js/736.a5a2747d.chunk.js","mappings":"8QAEaA,EAAYC,EAAAA,EAAAA,GAAH,+GAOTC,EAAUD,EAAAA,EAAAA,IAAH,2CAIPE,EAAWF,EAAAA,EAAAA,EAAH,qE,SCyCrB,EAjDa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,kHAE2BC,EAAAA,EAAAA,GAAUH,GAFrC,gBAEYF,EAFZ,EAEYA,KAEFM,EAAkBN,EAAKO,KAC3B,YACE,MAAO,CAAEC,KADgC,EAAxCA,KACcC,UAD0B,EAAlCA,UACmBC,aADe,EAAvBA,aACsBC,GADC,EAATA,GAEjC,IAGHV,EAAQK,GAVZ,gDAYIM,QAAQC,IAAI,KAAIC,SAZpB,0DADc,uBAAC,WAAD,wBAgBdC,EACD,GAAE,CAACb,IAKJ,OACE,+BACE,+BACGF,QADH,IACGA,OADH,EACGA,EAAMO,KAAI,SAAAS,GAAE,OACX,SAACrB,EAAD,WACE,4BACE,SAACE,EAAD,CAASoB,IACLD,EAAGN,aAAH,0CACuCM,EAAGN,cAVxD,mKAaYQ,IAAKF,EAAGR,QAEV,SAACV,EAAD,UAAWkB,EAAGR,QACd,UAACV,EAAD,yBAAsBkB,EAAGP,iBAVbO,EAAGL,GADR,OAkBpB,C,qLCpDKQ,EAAQ,8BAERC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBV,MAAM,GAAD,OACnBI,EADmB,uCAEtBC,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gGAEgBO,MAAM,GAAD,OACnBI,EADmB,gCACaX,EADb,8CAEtBY,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiClB,GAAjC,gGAEgBI,MAAM,GAAD,OACnBI,EADmB,mBACAR,EADA,mBAEtBS,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHf,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAAyBM,GAAzB,gGAEgBI,MAAM,GAAD,OACnBI,EADmB,mBACAR,EADA,2BAEtBS,GAJC,cAEGM,EAFH,gBAMUA,EAAKC,OANf,wEAQHf,QAAQC,IAAI,KAAMC,SARf,gFAYA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnB,GAA5B,gGAEgBI,MAAM,GAAD,OAAII,EAAJ,mBAAuBR,EAAvB,kCACxBS,GAHG,cAEGM,EAFH,gBAIUA,EAAKC,OAJf,wEAOHf,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/fetch.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastBlock = styled.li`\nwidth: 400px;\nlist-style: none;\nmargin-bottom: 5px;\nborder-bottom: 3px dashed grey\n`\n\nexport const CastImg = styled.img`\n    width: 100px;\n`\n\nexport const CastData = styled.p`\n    font-size: 14px;\n    line-height: 0.5;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'components/services/fetch';\nimport { CastBlock, CastImg, CastData } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const { cast } = await fetchCast(movieId);\n\n        const filteredResults = cast.map(\n          ({ name, character, profile_path, id }) => {\n            return { name, character, profile_path, id };\n          }\n        );\n\n        setCast(filteredResults);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://cdn-icons-png.flaticon.com/512/847/847969.png?w=740&t=st=1685547292~exp=1685547892~hmac=2825f00d1a2c61ae503ac799344847357b8a6baa8b9db6ee1132a6431b92254c';\n\n  return (\n    <>\n      <ul>\n        {cast?.map(el => (\n          <CastBlock key={el.id}>\n            <div>\n              <CastImg src={\n                  el.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${el.profile_path}`\n                    : defaultImg\n                }\n                alt={el.name}\n              />\n              <CastData>{el.name}</CastData>\n              <CastData>Character: {el.character}</CastData>\n            </div>\n          </CastBlock>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = `https://api.themoviedb.org/`;\n// const KEY = '499c9b17ec4dc1194fa3fa31966ff450';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTljOWIxN2VjNGRjMTE5NGZhM2ZhMzE5NjZmZjQ1MCIsInN1YiI6IjY0NmNkZDJjNzA2YjlmMDBmZTU0MmYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._EPljdPLGA2vemLx2WJWdxYEBVsaBhAo9KW81IlKbcM',\n  },\n};\n\nexport async function fetchTrendMovies() {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByTitle(name) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id){\n  try{\n    const data = await fetch(`${BASE_URL}3/movie/${id}/reviews?language=en-US&page=1`,\n    options)\n    return await data.json();\n\n  }catch(error){\n    console.log(error.message)\n  }\n}\n"],"names":["CastBlock","styled","CastImg","CastData","useState","cast","setCast","movieId","useParams","useEffect","fetchCast","filteredResults","map","name","character","profile_path","id","console","log","message","fetch","el","src","alt","BASE_URL","options","method","headers","accept","Authorization","fetchTrendMovies","data","json","fetchMovieByTitle","fetchMovieDetails","fetchReviews"],"sourceRoot":""}