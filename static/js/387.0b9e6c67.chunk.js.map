{"version":3,"file":"static/js/387.0b9e6c67.chunk.js","mappings":"iQAEaA,E,OAASC,EAAAA,IAAH,gD,SCoCnB,EAjCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAH,EAAAA,EAAAA,WAAS,WAAM,wCACb,kHAE8BK,EAAAA,EAAAA,IAAaF,GAF3C,gBAEYG,EAFZ,EAEYA,QAEFC,EAAkBD,EAAQE,KAAI,YAClC,MAAO,CAAEC,GADsD,EAA1BA,GACxBC,OADkD,EAAtBA,OACpBC,QAD0C,EAAdA,QAElD,IAEDT,EAAWK,GARf,gDAUIK,QAAQC,IAAI,KAAIC,SAVpB,0DADa,uBAAC,WAAD,wBAcbC,EACD,GAAE,CAACZ,KAGF,8BACsB,IAAnBF,EAAQe,QAAe,qEAAmDf,EAAQO,KAAI,SAAAS,GAAE,OACvF,UAACnB,EAAD,YACE,qCAAamB,EAAGP,OAAhB,QACA,uBAAIO,EAAGN,YAFIM,EAAGR,GADuE,KAQ9F,C,qLCpCKS,EAAQ,8BAERC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEgBT,MAAM,GAAD,OACnBG,EADmB,uCAEtBC,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEgBb,MAAM,GAAD,OACnBG,EADmB,gCACaU,EADb,8CAEtBT,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gGAEgBM,MAAM,GAAD,OACnBG,EADmB,mBACAT,EADA,mBAEtBU,GAJC,cAEGM,EAFH,gBAOUA,EAAKC,OAPf,wEASHd,QAAQC,IAAI,KAAMC,SATf,gFAaA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBrB,GAAzB,gGAEgBM,MAAM,GAAD,OACnBG,EADmB,mBACAT,EADA,2BAEtBU,GAJC,cAEGM,EAFH,gBAMUA,EAAKC,OANf,wEAQHd,QAAQC,IAAI,KAAMC,SARf,gFAYA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA4BI,GAA5B,gGAEgBM,MAAM,GAAD,OAAIG,EAAJ,mBAAuBT,EAAvB,kCACxBU,GAHG,cAEGM,EAFH,gBAIUA,EAAKC,OAJf,wEAOHd,QAAQC,IAAI,KAAMC,SAPf,gF","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/fetch.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Review = styled.div`\n    padding: 5px 20px;\n`","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/services/fetch';\nimport {Review} from './Reviews.styled'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useState(() => {\n    async function fetch() {\n      try {\n        const { results } = await fetchReviews(movieId);\n        \n        const filteredResults = results.map(({ id, author, content }) => {\n          return { id, author, content };\n        });\n      \n        setReviews(filteredResults);\n      } catch (err) {\n        console.log(err.message);\n      } \n    }\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? <p>We don't have any rewiews for this movie.</p> : reviews.map(el => (\n        <Review key={el.id}>\n          <h4>Author: {el.author} </h4>\n          <p>{el.content}</p>\n        </Review>\n      ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = `https://api.themoviedb.org/`;\n// const KEY = '499c9b17ec4dc1194fa3fa31966ff450';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OTljOWIxN2VjNGRjMTE5NGZhM2ZhMzE5NjZmZjQ1MCIsInN1YiI6IjY0NmNkZDJjNzA2YjlmMDBmZTU0MmYzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._EPljdPLGA2vemLx2WJWdxYEBVsaBhAo9KW81IlKbcM',\n  },\n};\n\nexport async function fetchTrendMovies() {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieByTitle(name) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/search/movie?query=${name}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const data = await fetch(\n      `${BASE_URL}3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    return await data.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function fetchReviews(id){\n  try{\n    const data = await fetch(`${BASE_URL}3/movie/${id}/reviews?language=en-US&page=1`,\n    options)\n    return await data.json();\n\n  }catch(error){\n    console.log(error.message)\n  }\n}\n"],"names":["Review","styled","useState","reviews","setReviews","movieId","useParams","fetchReviews","results","filteredResults","map","id","author","content","console","log","message","fetch","length","el","BASE_URL","options","method","headers","accept","Authorization","fetchTrendMovies","data","json","fetchMovieByTitle","name","fetchMovieDetails","fetchCast"],"sourceRoot":""}